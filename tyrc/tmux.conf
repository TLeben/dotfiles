# C-b is used by vim
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# shell
#set -g default-terminal "screen-256color"
#set -g default-command /bin/bash
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# sane scrolling
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# history
set-option -g history-limit 10000

# use vi mode
set -g mode-keys vi
set -g status-keys vi

# use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

#colon
bind : command-prompt

# panes
#set -g mouse-select-pane on
set-option -g pane-border-fg black
set-option -g pane-active-border-fg blue

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# resize & select panes with mouse
# set-option -g mouse on

# splitting
# <prefix> h, | or " splits pane horizontal
bind-key h split-window -h
bind-key | split-window -h
# <prefix> v, - or % splits pane vertical
bind-key v split-window -v
bind-key - split-window -v

# reload tmux conf
bind-key r source-file ~/.tmux.conf
